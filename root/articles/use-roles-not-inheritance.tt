[%
    title            = 'Use Roles, Not Inheritance';
    identifier       = 'articles/use-roles-not-inheritance';
    include_comments = 1;
    syntax_highlight = 1;
    USE Ovid;
    INCLUDE include/header.tt;
%]

<p>Every once in a while I write a long answer on Quora and it takes off. [%
Ovid.cite('https://www.quora.com/Is-inheritance-bad-practice-in-OOP-Many-places-that-teach-design-patterns-say-to-opt-for-composition-over-inheritance-but-what-about-when-multiple-classes-share-logic-from-an-abstract-class-such-as-in-the-Template-Method-design-pattern',
'My answer explaining why inheritance in Object-Oriented (OO) programming is a
bad idea') %] was one of those answers. At 37,000 views and over 400 upvotes,
it wasn't <em>hugely</em> successful, but periodically I get an email from
Quora letting me know that it's been found by software developers, yet again,
and given a spate of upvotes. Unfortunately, I didn't take much time to
explain the solution to this problem, so that's what this little article is
about.</p>

<p>I won't belabor my points about inheritance because I covered them in the
Quora answer and, if you've been working with OO code long enough, you should
be well familiar with the problems. That being said, I would like to remind
you, again, that [%
Ovid.cite('http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-April/009261.html',
'Alan Kay, the inventor of the term “object-oriented programming”, had serious
reservations about inheritance' ) %] and eventually [%
Ovid.cite('http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en',
'he left inheritance out of the definition of OO programming.' ) %] But if
we're going to get rid of inheritance, what do we replace it with? This is
where everyone keeps swinging and missing because they didn't solve the
underlying problem of classes.</p>

<h1>The Problem with Classes</h1>

<p>Classes are great tools for code reuse.</p>

[% INCLUDE include/footer.tt %]
